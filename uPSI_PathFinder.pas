unit uPSI_PathFinder;

{$MODE Delphi}

{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis. 
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
 
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_PathFinder = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
    procedure ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_PathFinder(CL: TPSPascalCompiler);

{ run-time registration functions }
procedure RIRegister_PathFinder_Routines(S: TPSExec);

procedure Register;

implementation


uses
   windows
  ,extctrls
  ,Graphics
  ,Math
  ,AStar
  ,PathFinder
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_PathFinder]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_PathFinder(CL: TPSPascalCompiler);
begin
 CL.AddDelphiFunction('Procedure ClearAStarMap');
 CL.AddDelphiFunction('Procedure SetupAStarMap( xi, yi, xt, yt : integer; nEucliDistK : double)');
 CL.AddDelphiFunction('Procedure AddAStarObstacleCircle( xc, yc, r : double)');
 CL.AddDelphiFunction('Procedure AddAStarObstacleRect( xi, yi, xf, yf : double)');
 CL.AddDelphiFunction('Procedure CalcAStarPath');
 CL.AddDelphiFunction('Function GetAStarPathPoint( i : integer) : TPoint');
 CL.AddDelphiFunction('function GetAStarPathCount: integer');
end;

(* === run-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure RIRegister_PathFinder_Routines(S: TPSExec);
begin
 S.RegisterDelphiFunction(@ClearAStarMap, 'ClearAStarMap', cdRegister);
 S.RegisterDelphiFunction(@SetupAStarMap, 'SetupAStarMap', cdRegister);
 S.RegisterDelphiFunction(@AddAStarObstacleCircle, 'AddAStarObstacleCircle', cdRegister);
 S.RegisterDelphiFunction(@AddAStarObstacleRect, 'AddAStarObstacleRect', cdRegister);
 S.RegisterDelphiFunction(@CalcAStarPath, 'CalcAStarPath', cdRegister);
 S.RegisterDelphiFunction(@GetAStarPathPoint, 'GetAStarPathPoint', cdRegister);
 S.RegisterDelphiFunction(@GetAStarPathCount, 'GetAStarPathCount', cdRegister);
end;

 
 
{ TPSImport_PathFinder }
(*----------------------------------------------------------------------------*)
procedure TPSImport_PathFinder.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_PathFinder(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
procedure TPSImport_PathFinder.ExecImport1(CompExec: TPSScript; const ri: TPSRuntimeClassImporter);
begin
//  RIRegister_PathFinder(ri);
  RIRegister_PathFinder_Routines(CompExec.Exec); // comment it if no routines
end;
(*----------------------------------------------------------------------------*)
 
 
end.
